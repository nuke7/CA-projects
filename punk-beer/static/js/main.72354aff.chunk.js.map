{"version":3,"sources":["components/Modal.jsx","components/GridList.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","width","margin","height","maxHeight","overflowX","overflowY","paper","backgroundColor","palette","background","border","borderRadius","boxShadow","shadows","padding","spacing","textAlign","Backdrop","TransitionModal","props","classes","data","id","Modal","disableEnforceFocus","aria-describedby","className","open","onClose","setOpen","closeAfterTransition","BackdropComponent","BackdropProps","timeout","Fade","in","style","color","tagline","src","image_url","alt","marginTop","food_pairing","map","food","index","ingredients","malt","name","hops","fontSize","brewers_tips","root","maxWidth","minWidth","media","GridList","useState","setId","propsData","flexWrap","Card","flexDirection","CardActionArea","onClick","page","window","CardContent","Typography","gutterBottom","variant","component","description","first_brewed","Button","startIcon","e","currentTarget","console","log","formControl","selectEmpty","button","borderBottomColor","borderColor","App","url","setUrl","setData","search","setSearch","dateBefore","setDateBefore","dateAfter","setDateAfter","searchFn","length","replaceAll","alert","useEffect","fetch","then","response","json","TextField","label","value","type","placeholder","onChange","target","onKeyPress","key","FormControl","InputLabel","Select","labelId","MenuItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qVAQMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,MAAO,MACPC,OAAQ,OACRC,OAAQ,OACRC,UAAW,MACXC,UAAW,SACXC,UAAW,QAEbC,MAAO,CACLC,gBAAiBZ,EAAMa,QAAQC,WAAWH,MAC1CI,OAAQ,iBACRC,aAAc,MACdC,UAAWjB,EAAMkB,QAAQ,GACzBC,QAASnB,EAAMoB,QAAQ,EAAG,EAAG,GAC7BC,UAAW,SACXd,OAAQ,QAEVe,SAAU,CACRV,gBAAiB,8BAIN,SAASW,EAAgBC,GACtC,IAAMC,EAAU3B,IAWhB,OACE,8BACG0B,EAAME,KAAKF,EAAMG,KAChB,cAACC,EAAA,EAAD,CACEC,qBAAmB,EAEnBC,mBAAiB,+BACjBC,UAAWN,EAAQxB,MACnB+B,KAAMR,EAAMQ,KACZC,QAbY,WAClBT,EAAMU,SAAQ,IAaRC,sBAAoB,EACpBC,kBAAmBd,IACnBe,cAAe,CACbC,QAAS,IACTP,UAAWN,EAAQH,UAXvB,SAaE,cAACiB,EAAA,EAAD,CAAMC,GAAIhB,EAAMQ,KAAhB,SACE,sBAAKD,UAAWN,EAAQd,MAAxB,UAIE,oBACEgB,GAAG,+BACHc,MAAO,CAAEC,MAAO,yBAFlB,SAGGlB,EAAME,KAAKF,EAAMG,IAAIgB,QAArB,UACMnB,EAAME,KAAKF,EAAMG,IAAIgB,SACxB,eAEN,qBACEC,IACEpB,EAAME,KAAKF,EAAMG,IAAIkB,UAArB,UACOrB,EAAME,KAAKF,EAAMG,IAAIkB,WACxB,8DAENC,IAAI,YACJL,MAAO,CAAEpC,MAAO,OAAQC,OAAQ,OAAQE,UAAW,UAErD,oBAAIiC,MAAO,CAAEC,MAAO,wBAAyBK,UAAW,GAAxD,6BAGA,6BACGvB,EAAME,KAAKF,EAAMG,IAAIqB,aAClBxB,EAAME,KAAKF,EAAMG,IAAIqB,aAAaC,KAAI,SAACC,EAAMC,GAC3C,OAAO,mCAAkBD,IAAVC,MAEjB,+BAEN,oBAAIV,MAAO,CAAEC,MAAO,0BAApB,yBACA,6BACGlB,EAAME,KAAKF,EAAMG,IAAIyB,YAAYC,KAC9B7B,EAAME,KAAKF,EAAMG,IAAIyB,YAAYC,KAAKJ,KAAI,SAACI,EAAMF,GAC/C,OAAO,iCAAmBE,EAAKC,KAAxB,OAAWH,MAEpB,wBAEN,oBAAIV,MAAO,CAAEC,MAAO,yBAApB,wBACA,6BACGlB,EAAME,KAAKF,EAAMG,IAAIyB,YAAYG,KAC9B/B,EAAME,KAAKF,EAAMG,IAAIyB,YAAYG,KAAKN,KAAI,SAACM,EAAMJ,GAC/C,OAAO,iCAAmBI,EAAKD,KAAxB,OAAWH,MAEpB,wBAEN,sBAAMV,MAAO,CAAEC,MAAO,kBAAtB,oBACA,sBAAMD,MAAO,CAAEe,SAAU,SAAzB,SACGhC,EAAME,KAAKF,EAAMG,IAAI8B,aAClBjC,EAAME,KAAKF,EAAMG,IAAI8B,aACrB,6BCnGpB,IAAM3D,EAAYC,YAAW,CAC3B2D,KAAM,CACJC,SAAU,IACVC,SAAU,IACVtD,OAAQ,QAEVuD,MAAO,CACLtD,OAAQ,OAIL,SAASuD,EAAStC,GACvB,IAAMC,EAAU3B,IADc,EAENiE,oBAAS,GAFH,mBAEvB/B,EAFuB,KAEjBE,EAFiB,OAGV6B,mBAAS,GAHC,mBAGvBpC,EAHuB,KAGnBqC,EAHmB,KAI1BC,EAAYzC,EAAME,KAUtB,OACE,sBACEK,UAAU,cACVU,MAAO,CACLpC,MAAO,OACPC,OAAQ,OACRJ,QAAS,OAETgE,SAAU,OACV9D,eAAgB,UARpB,UAYGoB,EAAME,MACLF,EAAME,KAAKuB,KAAI,SAACvB,EAAMyB,GACpB,OACE,eAACgB,EAAA,EAAD,CAEExC,GAAIwB,EACJpB,UAAS,UAAKN,EAAQiC,KAAb,SACTjB,MAAO,CACLvC,QAAS,OACTkE,cAAe,SACfhE,eAAgB,gBAChBD,WAAY,UARhB,UAUE,cAACkE,EAAA,EAAD,CACE1C,GAAIwB,EAEJmB,QAAS,kBArCAC,EAqCoB,GAAD,OAAI7C,EAAKmB,gBApCjD2B,OAAOxC,KAAKuC,EAAM,UADE,IAACA,GAkCX,SAQE,qBACE3B,IACElB,EAAKmB,UAAL,UACOnB,EAAKmB,WACR,8DAENC,IAAI,YACJL,MAAO,CAAEpC,MAAO,OAAQC,OAAQ,YAAaE,UAAW,YAbrD2C,GAgBP,eAACsB,EAAA,EAAD,WAQE,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,SACGnD,EAAK4B,OAER,cAACoB,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,SACGnD,EAAKiB,UAER,cAAC+B,EAAA,EAAD,CACEE,QAAQ,QACRlC,MAAM,gBACNmC,UAAU,IACVpC,MAAO,CAAEnC,OAAQ,aAJnB,SAKGoB,EAAKoD,YAAcpD,EAAKoD,YAAc,mBAGzC,cAACJ,EAAA,EAAD,CAAYE,QAAQ,QAAQlC,MAAM,gBAAgBmC,UAAU,IAA5D,SACGnD,EAAKsB,aAAL,0BACsBtB,EAAKsB,aAAa,GADxC,KAEG,mCAEN,cAAC0B,EAAA,EAAD,CACEE,QAAQ,QACRlC,MAAM,gBACNmC,UAAU,IACVpC,MAAO,CAAEnC,OAAQ,aAJnB,SAKGoB,EAAKqD,aAAL,wBACoBrD,EAAKqD,aADzB,KAEG,gDAIR,cAACC,EAAA,EAAD,CACErD,GAAIwB,EACJpB,UAAWN,EAAQiC,KACnBkB,QAAQ,WACRK,UAAW,cAAC,IAAD,IACXX,QAAS,SAACY,GACRlB,EAAMkB,EAAEC,cAAcxD,IACtByD,QAAQC,IAAI1D,GA5F1BO,GAAQ,IAqFE,uBAjEKiB,MAiFZ3B,EAAME,MACL,cAACH,EAAD,CAAiBS,KAAMA,EAAME,QAASA,EAASR,KAAMuC,EAAWtC,GAAIA,O,iDC5HtE7B,G,MAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsF,YAAa,CACXhF,OAAQN,EAAMoB,QAAQ,GACtBwC,SAAU,KAEZ2B,YAAa,CACXxC,UAAW/C,EAAMoB,QAAQ,IAE3BoE,OAAQ,CACNlF,OAAQ,YACR,sBAAuB,CACrBoC,MAAO,WAET,8BAA+B,CAC7B+C,kBAAmB,SAErB,2BAA4B,CAC1B,aAAc,CACZC,YAAa,aAEf,mBAAoB,CAClBA,YAAa,WAGf,yBAA0B,CACxBA,YAAa,kBAkJNC,MA5If,WAAgB,IAAD,EACS5B,mBAAS,IADlB,mBACN6B,EADM,KACDC,EADC,OAEW9B,mBAAS,IAFpB,mBAENrC,EAFM,KAEAoE,EAFA,OAGe/B,mBAAS,IAHxB,mBAGNgC,EAHM,KAGEC,EAHF,OAIuBjC,mBAAS,IAJhC,mBAINkC,EAJM,KAIMC,EAJN,OAKqBnC,mBAAS,IAL9B,mBAKNoC,EALM,KAKKC,EALL,KAMP3E,EAAU3B,IAqChB,SAASuG,IACe,IAAlBN,EAAOO,QACTT,EAAO,8CAAD,OAA+CE,EAAOQ,WAAW,IAAK,OAC5EL,EAAc,IACdE,EAAa,KAEbI,MAAM,gCAIV,OAnBAC,qBAAU,WACRC,MAAMd,GACHe,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACjF,GACLoE,EAAQpE,GACR0D,QAAQC,IAAI3D,QAEf,CAACkE,IAaF,sBAAK7D,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACE,cAAC+E,EAAA,EAAD,CACE/E,UAAWN,EAAQ+D,OACnB7D,GAAG,iBACHoF,MAAM,oBACNnC,QAAQ,WACRoC,MAAOjB,EACPkB,KAAK,OACLC,YAAY,oBACZ5D,KAAK,SACL6D,SAAU,SAACjC,GACTc,EAAUd,EAAEkC,OAAOJ,QAErBK,WAAY,SAACnC,GACG,UAAVA,EAAEoC,KACJjB,OAoBN,wBAAQtE,UAAU,MAAMJ,GAAG,IAAI2C,QAAS,kBAAM+B,KAA9C,oBAGgB,IAAfT,EAAIU,QACH,sBAAKvE,UAAU,gBAAf,UACE,eAACwF,EAAA,EAAD,CAAaxF,UAAWN,EAAQ6D,YAAhC,UACE,cAACkC,EAAA,EAAD,CAAY7F,GAAG,2BAAf,uCAGA,eAAC8F,EAAA,EAAD,CACET,MAAOf,EACPxD,MAAO,CAAEmB,SAAU,SACnB8D,QAAQ,2BACR/F,GAAG,qBACHwF,SAhGa,SAACjC,GAC1BgB,EAAchB,EAAEkC,OAAOJ,OACnBpB,EAAIU,QAAU,IAChBT,EAAO,GAAD,OAAID,EAAJ,6BAA4BV,EAAEkC,OAAOJ,QAC3CZ,EAAa,IACbJ,EAAU,MAEVA,EAAU,IACVH,EAAO,sDAAD,OAAuDX,EAAEkC,OAAOJ,QACtEZ,EAAa,MAkFL,UAME,cAACuB,EAAA,EAAD,CAAUX,MAAO,KAAjB,kBACA,cAACW,EAAA,EAAD,CAAUX,MAAO,KAAjB,kBACA,cAACW,EAAA,EAAD,CAAUX,MAAO,KAAjB,kBACA,cAACW,EAAA,EAAD,CAAUX,MAAO,KAAjB,kBACA,cAACW,EAAA,EAAD,CAAUX,MAAO,KAAjB,kBACA,cAACW,EAAA,EAAD,CAAUX,MAAO,KAAjB,kBACA,cAACW,EAAA,EAAD,CAAUX,MAAO,KAAjB,wBAGJ,eAACO,EAAA,EAAD,CAAaxF,UAAWN,EAAQ6D,YAAhC,UACE,cAACkC,EAAA,EAAD,CAAY7F,GAAG,4BAAf,sCAGA,eAAC8F,EAAA,EAAD,CACET,MAAOb,EACP1D,MAAO,CAAEmB,SAAU,SACnB8D,QAAQ,4BACR/F,GAAG,sBACHwF,SAtGY,SAACjC,GACzBkB,EAAalB,EAAEkC,OAAOJ,OAClBpB,EAAIU,QAAU,IAChBT,EAAO,GAAD,OAAID,EAAJ,4BAA2BV,EAAEkC,OAAOJ,QAC1Cd,EAAc,IACdF,EAAU,MAEVA,EAAU,IACVH,EAAO,oDAAD,OAAqDX,EAAEkC,OAAOJ,QACpEd,EAAc,MAwFN,UAME,cAACyB,EAAA,EAAD,CAAUX,MAAO,KAAjB,kBACA,cAACW,EAAA,EAAD,CAAUX,MAAO,KAAjB,kBACA,cAACW,EAAA,EAAD,CAAUX,MAAO,KAAjB,kBACA,cAACW,EAAA,EAAD,CAAUX,MAAO,KAAjB,kBACA,cAACW,EAAA,EAAD,CAAUX,MAAO,KAAjB,kBACA,cAACW,EAAA,EAAD,CAAUX,MAAO,KAAjB,8BAMO,IAAhBtF,EAAK4E,OAAe,cAACxC,EAAD,CAAUpC,KAAMA,IAAW,mBCxKvCkG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.72354aff.chunk.js","sourcesContent":["import Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n/* import { useState } from \"react\"; */\r\n/* import Button from \"@material-ui/core/Button\";\r\nimport TheatersIcon from \"@material-ui/icons/Theaters\"; */\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"70%\",\r\n    margin: \"auto\",\r\n    height: \"auto\",\r\n    maxHeight: \"97%\",\r\n    overflowX: \"hidden\",\r\n    overflowY: \"auto\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    borderRadius: \"7px\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    textAlign: \"center\",\r\n    height: \"auto\",\r\n  },\r\n  Backdrop: {\r\n    backgroundColor: \"rgba(76, 201, 240, .2)\",\r\n  },\r\n}));\r\n\r\nexport default function TransitionModal(props) {\r\n  const classes = useStyles();\r\n  /*  const [open, setOpen] = useState(props.open); */\r\n\r\n  /*   const handleOpen = () => {\r\n    setOpen(true);\r\n  }; */\r\n\r\n  const handleClose = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.data[props.id] && (\r\n        <Modal\r\n          disableEnforceFocus\r\n          /* aria-labelledby=\"transition-modal-title\" */\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={props.open}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n            className: classes.Backdrop,\r\n          }}>\r\n          <Fade in={props.open}>\r\n            <div className={classes.paper}>\r\n              {/* <h2 id=\"transition-modal-title\">\r\n                {props.data[props.id].name ? `${props.data[props.id].name}` : \"no name\"}\r\n              </h2> */}\r\n              <h4\r\n                id=\"transition-modal-description\"\r\n                style={{ color: \"rgba(76, 201, 240, 1)\" }}>\r\n                {props.data[props.id].tagline\r\n                  ? `${props.data[props.id].tagline}`\r\n                  : \"no tagline\"}\r\n              </h4>\r\n              <img\r\n                src={\r\n                  props.data[props.id].image_url\r\n                    ? `${props.data[props.id].image_url}`\r\n                    : \"https://s3.amazonaws.com/FringeBucket/image_placeholder.png\"\r\n                }\r\n                alt=\"cover art\"\r\n                style={{ width: \"auto\", margin: \"auto\", maxHeight: \"20vw\" }}\r\n              />\r\n              <h4 style={{ color: \"rgba(76, 201, 240, 1)\", marginTop: 0 }}>\r\n                Goes well with:\r\n              </h4>\r\n              <h5>\r\n                {props.data[props.id].food_pairing\r\n                  ? props.data[props.id].food_pairing.map((food, index) => {\r\n                      return <p key={index}>- {food}</p>;\r\n                    })\r\n                  : \"no food pairing suggestion\"}\r\n              </h5>\r\n              <h4 style={{ color: \"rgba(76, 201, 240, 1))\" }}>Malts used:</h4>\r\n              <h5>\r\n                {props.data[props.id].ingredients.malt\r\n                  ? props.data[props.id].ingredients.malt.map((malt, index) => {\r\n                      return <span key={index}>{malt.name}, </span>;\r\n                    })\r\n                  : \"no malt ingredients\"}\r\n              </h5>\r\n              <h4 style={{ color: \"rgba(76, 201, 240, 1)\" }}>Hops used:</h4>\r\n              <h5>\r\n                {props.data[props.id].ingredients.hops\r\n                  ? props.data[props.id].ingredients.hops.map((hops, index) => {\r\n                      return <span key={index}>{hops.name}, </span>;\r\n                    })\r\n                  : \"no malt ingredients\"}\r\n              </h5>\r\n              <span style={{ color: \"rgb(0, 0, 139)\" }}>Tips: </span>\r\n              <span style={{ fontSize: \"0.9em\" }}>\r\n                {props.data[props.id].brewers_tips\r\n                  ? props.data[props.id].brewers_tips\r\n                  : \"no brewers tips\"}\r\n              </span>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\n\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n/* import CardMedia from \"@material-ui/core/CardMedia\"; */\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n/* import LocalDrinkIcon from \"@material-ui/icons/LocalDrink\"; */\r\nimport DescriptionRoundedIcon from \"@material-ui/icons/DescriptionRounded\";\r\nimport TransitionModal from \"./Modal\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    minWidth: 300,\r\n    margin: \"1rem\",\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport function GridList(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [id, setId] = useState(0);\r\n  let propsData = props.data;\r\n\r\n  const buttonClicked = (page) => {\r\n    window.open(page, \"_blank\");\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"cardWrapper\"\r\n      style={{\r\n        width: \"100%\",\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        /* flexDirection: \"column\", */\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"center\",\r\n        /* alignItems: \"center\", */\r\n        /* alignContent: \"flex-start\", */\r\n      }}>\r\n      {props.data &&\r\n        props.data.map((data, index) => {\r\n          return (\r\n            <Card\r\n              key={index}\r\n              id={index}\r\n              className={`${classes.root} Card`}\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}>\r\n              <CardActionArea\r\n                id={index}\r\n                key={index}\r\n                onClick={() => buttonClicked(`${data.image_url}`)}\r\n                /* style={{\r\n                  height: \"90%\",\r\n                }} */\r\n              >\r\n                <img\r\n                  src={\r\n                    data.image_url\r\n                      ? `${data.image_url}`\r\n                      : \"https://s3.amazonaws.com/FringeBucket/image_placeholder.png\"\r\n                  }\r\n                  alt=\"cover art\"\r\n                  style={{ width: \"auto\", margin: \"1rem auto\", maxHeight: \"20rem\" }}\r\n                />\r\n              </CardActionArea>\r\n              <CardContent\r\n              /* style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"space-between\",\r\n                  alignItems: \"center\",\r\n                }} */\r\n              >\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  {data.name}\r\n                </Typography>\r\n                <Typography gutterBottom variant=\"h6\" component=\"h4\">\r\n                  {data.tagline}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  color=\"textSecondary\"\r\n                  component=\"p\"\r\n                  style={{ margin: \"1rem auto\" }}>\r\n                  {data.description ? data.description : \"No description\"}\r\n                </Typography>\r\n\r\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n                  {data.food_pairing\r\n                    ? `Goes well with: ${data.food_pairing[0]} `\r\n                    : \"You can drink it with anything\"}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  color=\"textSecondary\"\r\n                  component=\"p\"\r\n                  style={{ margin: \"1rem auto\" }}>\r\n                  {data.first_brewed\r\n                    ? `First brewed: ${data.first_brewed} `\r\n                    : \"No data about when this was brewed first\"}\r\n                </Typography>\r\n              </CardContent>\r\n\r\n              <Button\r\n                id={index}\r\n                className={classes.root}\r\n                variant=\"outlined\"\r\n                startIcon={<DescriptionRoundedIcon />}\r\n                onClick={(e) => {\r\n                  setId(e.currentTarget.id);\r\n                  console.log(id);\r\n                  handleOpen();\r\n                }}>\r\n                Details\r\n              </Button>\r\n            </Card>\r\n          );\r\n        })}\r\n\r\n      {props.data && (\r\n        <TransitionModal open={open} setOpen={setOpen} data={propsData} id={id} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { GridList } from \"./components/GridList\";\r\n/* import Button from \"@material-ui/core/Button\";\r\nimport DescriptionRoundedIcon from \"@material-ui/icons/DescriptionRounded\"; */\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n/* import FormHelperText from \"@material-ui/core/FormHelperText\"; */\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  button: {\r\n    margin: \"1rem auto\",\r\n    \"& label.Mui-focused\": {\r\n      color: \"#44bce0\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"green\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"lightBlue\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#44bce0\",\r\n        /* boxShadow: \"10px 10px 99px 6px rgba(76, 201, 240, 1)\", */\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#44bce0\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const [url, setUrl] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [dateBefore, setDateBefore] = useState(\"\");\r\n  const [dateAfter, setDateAfter] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const handleChangeBefore = (e) => {\r\n    setDateBefore(e.target.value);\r\n    if (url.length <= 52) {\r\n      setUrl(`${url}&brewed_before=01-${e.target.value}`);\r\n      setDateAfter(\"\");\r\n      setSearch(\"\");\r\n    } else {\r\n      setSearch(\"\");\r\n      setUrl(`https://api.punkapi.com/v2/beers?&brewed_before=01-${e.target.value}`);\r\n      setDateAfter(\"\");\r\n    }\r\n  };\r\n\r\n  const handleChangeAfter = (e) => {\r\n    setDateAfter(e.target.value);\r\n    if (url.length <= 52) {\r\n      setUrl(`${url}&brewed_after=12-${e.target.value}`);\r\n      setDateBefore(\"\");\r\n      setSearch(\"\");\r\n    } else {\r\n      setSearch(\"\");\r\n      setUrl(`https://api.punkapi.com/v2/beers?brewed_after=12-${e.target.value}`);\r\n      setDateBefore(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setData(data);\r\n        console.log(data);\r\n      });\r\n  }, [url]);\r\n\r\n  function searchFn() {\r\n    if (search.length !== 0) {\r\n      setUrl(`https://api.punkapi.com/v2/beers?beer_name=${search.replaceAll(\" \", \"_\")}`);\r\n      setDateBefore(\"\");\r\n      setDateAfter(\"\");\r\n    } else {\r\n      alert(\"no empty search field please\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"search\">\r\n        <TextField\r\n          className={classes.button}\r\n          id=\"outlined-basic\"\r\n          label=\"Search for a beer\"\r\n          variant=\"outlined\"\r\n          value={search}\r\n          type=\"text\"\r\n          placeholder=\"search for a beer\"\r\n          name=\"search\"\r\n          onChange={(e) => {\r\n            setSearch(e.target.value);\r\n          }}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              searchFn();\r\n            }\r\n          }}\r\n        />\r\n        {/* <input\r\n          value={search}\r\n          type=\"text\"\r\n          placeholder=\"search for a beer\"\r\n          name=\"search\"\r\n          id=\"s\"\r\n          onChange={(e) => {\r\n            setSearch(e.target.value);\r\n          }}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              searchFn();\r\n            }\r\n          }}\r\n        /> */}\r\n\r\n        <button className=\"btn\" id=\"b\" onClick={() => searchFn()}>\r\n          SEARCH\r\n        </button>\r\n        {url.length !== 0 && (\r\n          <div className=\"buttonWrapper\">\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                only show beers before...\r\n              </InputLabel>\r\n              <Select\r\n                value={dateBefore}\r\n                style={{ minWidth: \"200px\" }}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                onChange={handleChangeBefore}>\r\n                <MenuItem value={2010}>2010</MenuItem>\r\n                <MenuItem value={2011}>2011</MenuItem>\r\n                <MenuItem value={2012}>2012</MenuItem>\r\n                <MenuItem value={2013}>2013</MenuItem>\r\n                <MenuItem value={2014}>2014</MenuItem>\r\n                <MenuItem value={2015}>2015</MenuItem>\r\n                <MenuItem value={2016}>2016</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-label2\">\r\n                only show beers after...\r\n              </InputLabel>\r\n              <Select\r\n                value={dateAfter}\r\n                style={{ minWidth: \"200px\" }}\r\n                labelId=\"demo-simple-select-label2\"\r\n                id=\"demo-simple-select2\"\r\n                onChange={handleChangeAfter}>\r\n                <MenuItem value={2010}>2010</MenuItem>\r\n                <MenuItem value={2011}>2011</MenuItem>\r\n                <MenuItem value={2012}>2012</MenuItem>\r\n                <MenuItem value={2013}>2013</MenuItem>\r\n                <MenuItem value={2014}>2014</MenuItem>\r\n                <MenuItem value={2015}>2015</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {data.length !== 0 ? <GridList data={data} /> : \"No such beer\"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}